---
import { getCollection } from 'astro:content';
import Layout from '@/layouts/Layout.astro';
import { Card, CardContent, CardHeader } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { formatDistance } from 'date-fns';
import BreadcrumbSchema from '@/components/BreadcrumbSchema.astro';

const resources = await getCollection('resources');
const sortedResources = resources.sort((a, b) => 
  new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);

const featuredResource = sortedResources.find(resource => resource.data.featured);
const regularResources = sortedResources.filter(resource => !resource.data.featured);

const breadcrumbItems = [
  { name: "Home", url: "https://haymarketbicycles.com/" },
  { name: "Resources", url: "https://haymarketbicycles.com/resources" }
];
---

<Layout title="Cycling Resources & Guides for Haymarket | Expert Bike Tips | Haymarket Bicycles" description="Expert cycling resources, maintenance guides, and bike tips for riders in Haymarket, Gainesville, and Northern Virginia. Learn from our bicycle experts about repairs, fitting, and more.">
  <main class="min-h-screen">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
      <div class="text-center mb-16">
        <h1 class="text-4xl font-bold tracking-tight fade-in">
          Haymarket, VA Cycling Resources & Guides
        </h1>
        <p class="mt-4 text-lg text-muted-foreground max-w-2xl mx-auto fade-in">
          Expert guides, maintenance tips, and cycling advice for Northern Virginia riders
        </p>
      </div>

      {featuredResource && (
        <div class="mb-16">
          <h2 class="text-2xl font-bold mb-6">Featured Cycling Article for Haymarket, VA Riders</h2>
          <a href={`/resources/${featuredResource.slug}`} class="group">
            <Card class="overflow-hidden hover-scale">
              <div class="aspect-video relative">
                <picture>
                  <source
                    media="(min-width: 1024px)"
                    srcSet={`/.netlify/images/${featuredResource.data.image}?nf_resize=fit&w=1200 1x, /.netlify/images/${featuredResource.data.image}?nf_resize=fit&w=2400 2x`}
                    sizes="100vw"
                  />
                  <source
                    media="(min-width: 768px)"
                    srcSet={`/.netlify/images/${featuredResource.data.image}?nf_resize=fit&w=800 1x, /.netlify/images/${featuredResource.data.image}?nf_resize=fit&w=1600 2x`}
                    sizes="100vw"
                  />
                  <img
                    src={`/.netlify/images/${featuredResource.data.image}?nf_resize=fit&w=600`}
                    srcSet={`/.netlify/images/${featuredResource.data.image}?nf_resize=fit&w=600 1x, /.netlify/images/${featuredResource.data.image}?nf_resize=fit&w=1200 2x`}
                    alt={featuredResource.data.title}
                    class="absolute inset-0 w-full h-full object-cover"
                    width="1200"
                    height="675"
                    fetchpriority="high"
                    decoding="async"
                  />
                </picture>
                <Badge class="absolute top-4 right-4 bg-accent">Featured</Badge>
              </div>
              <CardContent class="p-6">
                <h3 class="text-2xl font-bold mb-2 group-hover:text-accent transition-colors">
                  {featuredResource.data.title}
                </h3>
                <p class="text-muted-foreground mb-4">
                  {featuredResource.data.description}
                </p>
                <div class="flex items-center justify-between text-sm">
                  <span class="text-muted-foreground">By {featuredResource.data.author}</span>
                  <span class="text-muted-foreground">
                    {formatDistance(new Date(featuredResource.data.date), new Date(), { addSuffix: true })}
                  </span>
                </div>
              </CardContent>
            </Card>
          </a>
        </div>
      )}

      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {regularResources.map(resource => (
          <a href={`/resources/${resource.slug}`} class="group">
            <Card class="h-full hover-scale">
              <div class="aspect-video relative">
                <picture>
                  <source
                    media="(min-width: 1024px)"
                    srcSet={`/.netlify/images/${resource.data.image}?nf_resize=fit&w=600 1x, /.netlify/images/${resource.data.image}?nf_resize=fit&w=1200 2x`}
                    sizes="33vw"
                  />
                  <source
                    media="(min-width: 768px)"
                    srcSet={`/.netlify/images/${resource.data.image}?nf_resize=fit&w=400 1x, /.netlify/images/${resource.data.image}?nf_resize=fit&w=800 2x`}
                    sizes="50vw"
                  />
                  <img
                    src={`/.netlify/images/${resource.data.image}?nf_resize=fit&w=400`}
                    srcSet={`/.netlify/images/${resource.data.image}?nf_resize=fit&w=400 1x, /.netlify/images/${resource.data.image}?nf_resize=fit&w=800 2x`}
                    alt={resource.data.title}
                    class="absolute inset-0 w-full h-full object-cover"
                    width="600"
                    height="338"
                    loading="lazy"
                    decoding="async"
                  />
                </picture>
                <Badge class="absolute top-4 right-4" variant="secondary">
                  {resource.data.category}
                </Badge>
              </div>
              <CardContent class="p-6">
                <h3 class="text-xl font-bold mb-2 group-hover:text-accent transition-colors">
                  {resource.data.title}
                </h3>
                <p class="text-muted-foreground mb-4">
                  {resource.data.description}
                </p>
                <div class="flex items-center justify-between text-sm">
                  <span class="text-muted-foreground">By {resource.data.author}</span>
                  <span class="text-muted-foreground">
                    {formatDistance(new Date(resource.data.date), new Date(), { addSuffix: true })}
                  </span>
                </div>
              </CardContent>
            </Card>
          </a>
        ))}
      </div>
    </div>
  </main>
  <BreadcrumbSchema items={breadcrumbItems} />
</Layout>

<style>
  .fade-in {
    animation: fadeIn 0.5s ease-in;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>